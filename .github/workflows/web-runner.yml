name: Test Runner

on:
  push:
    branches: [ "master" ]
  schedule:
    - cron: '30 7 * * *'

jobs:
  selenium-web-chrome:
    runs-on: ubuntu-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install Chrome
      uses: browser-actions/setup-chrome@v0.0.0
      with:
        chrome-options: '--headless'

    - name: Setup Gradlew
      run: chmod +x gradlew

    - name: Load Environment Variables
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env

    - name: Execute Test
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: ./gradlew clean webTest -Dbrowser=chrome -Dheadless=true

    - name: Archive web test results
      uses: actions/upload-artifact@v4.3.0
      if: always() #always() # success() , failure(), canceled()
      with:
        name: web test reports (Chrome)
        path: target/index.html

  selenium-web-firefox:
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Firefox
        uses: browser-actions/setup-firefox@v0.0.0
        with:
          firefox-version: 'latest'

      - name: Setup Gradlew
        run: chmod +x gradlew

      - name: Load Environment Variables
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Execute Test
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ./gradlew clean webTest -Dbrowser=firefox -Dheadless=true

      - name: Archive web test results
        uses: actions/upload-artifact@v4.3.0
        if: always() #always() # success() , failure(), canceled()
        with:
          name: web test reports (Firefox)
          path: target/index.html

  selenium-web-edge:
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Microsoft Edge
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /usr/share/keyrings/
          sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
          sudo apt-get update
          sudo apt-get install -y microsoft-edge-stable

      - name: Setup Gradlew
        run: chmod +x gradlew

      - name: Load Environment Variables
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Execute Test
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ./gradlew clean webTest -Dbrowser=edge -Dheadless=true

      - name: Archive web test results
        uses: actions/upload-artifact@v4.3.0
        if: always() #always() # success() , failure(), canceled()
        with:
          name: web test reports (Edge)
          path: target/index.html

  restAssured-API-test:
    #needs: selenium-web-test
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradlew
        run: chmod +x gradlew

      - name: Load Environment Variables
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Execute Test
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: ./gradlew clean apiTest

      - name: Archive API test results
        uses: actions/upload-artifact@v4.3.0
        if: always() #always() # success() , failure(), canceled()
        with:
          name: api-test-report
          path: build/reports/tests/apiTest